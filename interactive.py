"""
Interactive session management
"""

from typing import List, Dict, Any
from .config import SlurmConfig


class InteractiveManager:
    """Handles interactive session script generation"""
    
    def __init__(self, config: SlurmConfig):
        self.config = config
    
    def generate_script(self, jobs: List[Dict[str, Any]]) -> str:
        """Generate interactive session script"""
        script_parts = [
            "#!/bin/bash",
            "",
            "# Generated by taskmanager - Interactive Mode",
            "# " + "=" * 50,
            "",
            "set -euo pipefail",
            "",
            "# Interactive Task Manager",
            "readonly LOG_FILE=\"taskmanager_interactive.log\"",
            "",
            "log_message() {",
            "    echo \"[$(date '+%Y-%m-%d %H:%M:%S')] $1\" | tee -a \"$LOG_FILE\"",
            "}",
            "",
            "show_jobs() {",
            "    echo \"Available jobs:\"",
        ]
        
        # Add job listing
        for i, job in enumerate(jobs, 1):
            script_parts.append(f"    echo \"  {i}. {job['name']} ({len(job['scripts'])} scripts)\"")
        
        script_parts.extend([
            "}",
            "",
            "execute_job() {",
            "    local job_id=\"$1\"",
            "    case \"$job_id\" in",
        ])
        
        # Add job execution cases
        for i, job in enumerate(jobs, 1):
            script_parts.extend([
                f"        {i})",
                f"            log_message \"Executing job: {job['name']}\"",
                f"            cd \"{job['path']}\" || return 1",
            ])
            
            for script in job['scripts']:
                script_parts.extend([
                    f"            echo \"Running: {script}\"",
                    f"            srun ./{script}",
                ])
            
            script_parts.extend([
                f"            cd - > /dev/null",
                f"            ;;",
            ])
        
        script_parts.extend([
            "        *)",
            "            echo \"Invalid job ID: $job_id\"",
            "            return 1",
            "            ;;",
            "    esac",
            "}",
            "",
            "interactive_menu() {",
            "    while true; do",
            "        echo",
            "        show_jobs",
            "        echo \"  a. Run all jobs\"",
            "        echo \"  q. Quit\"",
            "        echo",
            "        read -p \"Select job to run: \" choice",
            "        ",
            "        case \"$choice\" in",
            "            [1-9]*)",
            "                execute_job \"$choice\"",
            "                ;;",
            "            a|A)",
            "                log_message \"Running all jobs\"",
        ])
        
        for i, job in enumerate(jobs, 1):
            script_parts.append(f"                execute_job {i}")
        
        script_parts.extend([
            "                ;;",
            "            q|Q)",
            "                echo \"Goodbye!\"",
            "                break",
            "                ;;",
            "            *)",
            "                echo \"Invalid choice: $choice\"",
            "                ;;",
            "        esac",
            "    done",
            "}",
            "",
            "# Main execution",
            "log_message \"Starting Interactive Task Manager\"",
            "echo \"Interactive SLURM Task Manager\"",
            "echo \"Working directory: $(pwd)\"",
            "interactive_menu",
            ""
        ])
        
        return "\n".join(script_parts)